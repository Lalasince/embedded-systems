#define F_CPU 16000000UL
#include <avr/io.h>
#include <util/delay.h>

void serial_begin()
{
   UBRR0 = 51;
   UCSR0A = 0b00000000;
   UCSR0B = 0b10011000;
   UCSR0C = 0b00000110;
   
   sei ();
}

void serial_putc(char data)
{
   char busy;
   do { busy = UCSR0A & 0b00100000; }
   while (busy==0);
   UDR0 = data;
}

char serial_getc()
{
   char busy;
   do { busy = UCSR0A & 0b10000000; }
   while (busy==0);
   return (UDR0);
}

void serial_puts(char *data)
{
      while (*data) {
      serial_putc(*data++);
   }
}

void i2c_init()
{
   DDRC = 0b00100000;
   TWSR = 0b00000000;
   TWBR = 32;
   TWCR = 0b00000100;
   
   PORTB = PORTB & 0b11011111;
   _delay_ms(100);
   PORTB = PORTB | 0b00100000;
}

void i2c_start()
{
   char busy;
   TWCR = 0b10100100;
   do { busy = TWCR & 0b10000000; }
   while (busy==0);
}

void i2c_stop(void)
{
   TWCR = 0b10010100;
   _delay_ms(1);
}

void i2c_putc(char data)
{
   char busy;
   TWDR = data;
   TWCR = 0b10000100;
   do { busy = TWCR & 0b10000000; }
   while (busy==0);
}

char i2c_getc(char ack)
{
   char busy;
   if (ack==1) 	TWCR = 0b11000100;
   else		TWCR = 0b10000100;
   do { busy = TWCR & 0b10000000; }
   while (busy==0);
   return TWDR;
}

void mcp9803_wr(char addr, char data)
{
    i2c_start();
    i2c_putc(0b10010000); 
    i2c_putc(addr);
    i2c_putc(data);
    i2c_stop(); 
}

float mcp9803_rd(char addr)
{
    int d1;
    int d2;
    float temp;
    float tempd1;
    float tempd2;
    
    i2c_start();
    i2c_putc(0b10010000); 
    i2c_putc(addr);
    i2c_start(); 
    i2c_putc(0b10010001); 
    d1= i2c_getc(1); 
    d2 = i2c_getc(0); 
    i2c_stop(); 
    
    tempd2 = (float)d2;
    tempd2 = tempd2/256;
    tempd1 = (float)d1;
    temp = tempd1 + tempd2;      
    return temp;
}

int main()
{
  char data;
  
  i2c_init();
  serial_begin(); 
  
  mcp9803_wr(0b00000001, 0b01100000); 

  while(1) {
      data = mcp9803_rd(0b00000000);
      char temp[30];
      dtostrf(data,6,3,temp);
      char text[50];
      sprintf(text,"Temperature is %s \r\r",temp); 
      serial_puts(text);   
      _delay_ms(1000);
  }
}
